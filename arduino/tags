!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
LSM9DS1Class	ReadAccelerometer/LSM9DS1.cpp	/^LSM9DS1Class::LSM9DS1Class(TwoWire& wire) :$/;"	f	class:LSM9DS1Class
LSM9DS1Class	ReadAccelerometer/LSM9DS1.h	/^class LSM9DS1Class {$/;"	c
LSM9DS1_ADDRESS	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_ADDRESS /;"	d	file:
LSM9DS1_ADDRESS_M	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_ADDRESS_M /;"	d	file:
LSM9DS1_CTRL_REG1_G	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_CTRL_REG1_G /;"	d	file:
LSM9DS1_CTRL_REG1_M	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_CTRL_REG1_M /;"	d	file:
LSM9DS1_CTRL_REG2_M	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_CTRL_REG2_M /;"	d	file:
LSM9DS1_CTRL_REG3_M	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_CTRL_REG3_M /;"	d	file:
LSM9DS1_CTRL_REG6_XL	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_CTRL_REG6_XL /;"	d	file:
LSM9DS1_CTRL_REG8	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_CTRL_REG8 /;"	d	file:
LSM9DS1_OUT_X_G	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_OUT_X_G /;"	d	file:
LSM9DS1_OUT_X_L_M	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_OUT_X_L_M /;"	d	file:
LSM9DS1_OUT_X_XL	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_OUT_X_XL /;"	d	file:
LSM9DS1_STATUS_REG	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_STATUS_REG /;"	d	file:
LSM9DS1_STATUS_REG_M	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_STATUS_REG_M /;"	d	file:
LSM9DS1_WHO_AM_I	ReadAccelerometer/LSM9DS1.cpp	/^#define LSM9DS1_WHO_AM_I /;"	d	file:
MyParseNumber_h	arduino_stepper/MyParseNumber.h	/^    #define MyParseNumber_h$/;"	d
MyStepper_h	arduino_stepper/MyStepper.h	/^    #define MyStepper_h$/;"	d
Stepper	arduino_stepper/MyStepper.cpp	/^Stepper::Stepper(uint8_t pul_pin, uint8_t dir_pin){$/;"	f	class:Stepper
Stepper	arduino_stepper/MyStepper.h	/^class Stepper{$/;"	c
YIELD	arduino_stepper/MyParseNumber.h	/^    #define YIELD /;"	d
YIELD	arduino_stepper/MyParseNumber.h	/^    #define YIELD;/;"	d
YIELD	arduino_stepper/MyStepper.h	/^    #define YIELD /;"	d
YIELD	arduino_stepper/MyStepper.h	/^    #define YIELD;/;"	d
_LSM9DS1_H_	ReadAccelerometer/Arduino_LSM9DS1_mod.h	/^#define _LSM9DS1_H_$/;"	d
_bound_set	arduino_stepper/MyStepper.h	/^    bool _bound_set = false;$/;"	m	class:Stepper	typeref:typename:bool
_currentPos	arduino_stepper/MyStepper.h	/^    volatile long _currentPos;$/;"	m	class:Stepper	typeref:typename:volatile long
_dir_pin	arduino_stepper/MyStepper.h	/^    uint8_t _dir_pin;$/;"	m	class:Stepper	typeref:typename:uint8_t
_direction	arduino_stepper/MyStepper.h	/^    bool _direction;$/;"	m	class:Stepper	typeref:typename:bool
_max_dist_from_0	arduino_stepper/MyStepper.h	/^    long _max_dist_from_0;$/;"	m	class:Stepper	typeref:typename:long
_pul_pin	arduino_stepper/MyStepper.h	/^    uint8_t _pul_pin;$/;"	m	class:Stepper	typeref:typename:uint8_t
_pulse_width	arduino_stepper/MyStepper.h	/^    const unsigned int _pulse_width = 3;$/;"	m	class:Stepper	typeref:typename:const unsigned int
_step_interval	arduino_stepper/MyStepper.h	/^    unsigned int _step_interval;$/;"	m	class:Stepper	typeref:typename:unsigned int
_targetPos	arduino_stepper/MyStepper.h	/^    volatile long _targetPos;$/;"	m	class:Stepper	typeref:typename:volatile long
_wire	ReadAccelerometer/LSM9DS1.h	/^    TwoWire* _wire;$/;"	m	class:LSM9DS1Class	typeref:typename:TwoWire *
accelerationAvailable	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::accelerationAvailable()$/;"	f	class:LSM9DS1Class	typeref:typename:int
accelerationSampleRate	ReadAccelerometer/LSM9DS1.cpp	/^float LSM9DS1Class::accelerationSampleRate()$/;"	f	class:LSM9DS1Class	typeref:typename:float
args	python_test_script/sweep_sin_test.py	/^args = (10,"~\/sweep_sine\/trail.csv")$/;"	v
begin	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::begin(int scale)$/;"	f	class:LSM9DS1Class	typeref:typename:int
continuousMode	ReadAccelerometer/LSM9DS1.h	/^    bool continuousMode;$/;"	m	class:LSM9DS1Class	typeref:typename:bool
distanceToGo	arduino_stepper/MyStepper.cpp	/^long Stepper::distanceToGo(){$/;"	f	class:Stepper	typeref:typename:long
dt	python_test_script/test_stepper.py	/^dt = 1e9\/fs # in ns.$/;"	v
end	ReadAccelerometer/LSM9DS1.cpp	/^void LSM9DS1Class::end()$/;"	f	class:LSM9DS1Class	typeref:typename:void
f1	python_test_script/sweep_sin_test.py	/^    f1 = executor.submit(log_serial_info, *args, **kwargs)$/;"	v
f2	python_test_script/sweep_sin_test.py	/^    f2 = executor.submit(sweepSin, 5, 100)$/;"	v
freq	python_test_script/test_stepper.py	/^freq = np.linspace(0, 20, num=fs*period+1) + 0.1$/;"	v
fs	python_test_script/test_stepper.py	/^fs = 100 # Hz$/;"	v
getPosition	arduino_stepper/MyStepper.cpp	/^long Stepper::getPosition(){$/;"	f	class:Stepper	typeref:typename:long
gyroscopeAvailable	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::gyroscopeAvailable()$/;"	f	class:LSM9DS1Class	typeref:typename:int
gyroscopeSampleRate	ReadAccelerometer/LSM9DS1.cpp	/^float LSM9DS1Class::gyroscopeSampleRate()$/;"	f	class:LSM9DS1Class	typeref:typename:float
i	python_test_script/test_arduino_speed.py	/^    i = 0$/;"	v
initOutputPins	arduino_stepper/MyStepper.cpp	/^void Stepper::initOutputPins(uint8_t pin) {$/;"	f	class:Stepper	typeref:typename:void
kwargs	python_test_script/sweep_sin_test.py	/^kwargs = {"port_path":"\/dev\/ttyUSB1", "baud":19200, "timeout":10}$/;"	v
line	python_test_script/test_arduino_speed.py	/^        line = ser.readline()$/;"	v
line	python_test_script/test_stepper.py	/^    line = ser.readline().decode()$/;"	v
locatePinSector	arduino_stepper/MyStepper.cpp	/^char Stepper::locatePinSector(uint8_t pin){ $/;"	f	class:Stepper	typeref:typename:char
magneticFieldAvailable	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::magneticFieldAvailable()$/;"	f	class:LSM9DS1Class	typeref:typename:int
magneticFieldSampleRate	ReadAccelerometer/LSM9DS1.cpp	/^float LSM9DS1Class::magneticFieldSampleRate()$/;"	f	class:LSM9DS1Class	typeref:typename:float
moveTo	arduino_stepper/MyStepper.cpp	/^void Stepper::moveTo(long absolute){$/;"	f	class:Stepper	typeref:typename:void
msg	python_test_script/test_stepper.py	/^        msg = 'M' + series[i] + '\\n'$/;"	v
myParseInt	arduino_stepper/MyParseNumber.cpp	/^long myParseInt()$/;"	f	typeref:typename:long
new	python_test_script/test_arduino_speed.py	/^        new = time.perf_counter_ns()$/;"	v
np	python_test_script/sweep_sin_test.py	/^import numpy as np$/;"	I
np	python_test_script/test_arduino_speed.py	/^import numpy as np$/;"	I
np	python_test_script/test_stepper.py	/^import numpy as np$/;"	I
old	python_test_script/test_arduino_speed.py	/^        old = new$/;"	v
old	python_test_script/test_arduino_speed.py	/^    old = time.perf_counter_ns()$/;"	v
period	python_test_script/test_stepper.py	/^period = 300$/;"	v
plt	python_test_script/test_stepper.py	/^import matplotlib.pyplot as plt$/;"	I
readAcceleration	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::readAcceleration(float& x, float& y, float& z)$/;"	f	class:LSM9DS1Class	typeref:typename:int
readGyroscope	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::readGyroscope(float& x, float& y, float& z)$/;"	f	class:LSM9DS1Class	typeref:typename:int
readMagneticField	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::readMagneticField(float& x, float& y, float& z)$/;"	f	class:LSM9DS1Class	typeref:typename:int
readPin	arduino_stepper/MyStepper.cpp	/^bool readPin(uint8_t pin){$/;"	f	typeref:typename:bool
readRegister	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::readRegister(uint8_t slaveAddress, uint8_t address)$/;"	f	class:LSM9DS1Class	typeref:typename:int
readRegisters	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::readRegisters(uint8_t slaveAddress, uint8_t address, uint8_t* data, size_t len/;"	f	class:LSM9DS1Class	typeref:typename:int
run	arduino_stepper/MyStepper.cpp	/^void Stepper::run(){$/;"	f	class:Stepper	typeref:typename:void
script_path	python_test_script/test_arduino_speed.py	/^script_path = os.path.join("nano_script", "ReadAccelerometer", "ReadAccelerometer.ino")$/;"	v
series	python_test_script/test_stepper.py	/^series = 1280*np.sin(2*np.pi*freq*t)$/;"	v
series	python_test_script/test_stepper.py	/^series = series.astype(int).astype(str)$/;"	v
setContinuousMode	ReadAccelerometer/LSM9DS1.cpp	/^void LSM9DS1Class::setContinuousMode() {$/;"	f	class:LSM9DS1Class	typeref:typename:void
setDirection	arduino_stepper/MyStepper.cpp	/^void Stepper::setDirection(bool direction){$/;"	f	class:Stepper	typeref:typename:void
setOneShotMode	ReadAccelerometer/LSM9DS1.cpp	/^void LSM9DS1Class::setOneShotMode() {$/;"	f	class:LSM9DS1Class	typeref:typename:void
setOutputPins	arduino_stepper/MyStepper.cpp	/^void Stepper::setOutputPins(uint8_t pin, bool state){$/;"	f	class:Stepper	typeref:typename:void
setPosition	arduino_stepper/MyStepper.cpp	/^void Stepper::setPosition(long pos){$/;"	f	class:Stepper	typeref:typename:void
setSpeed	arduino_stepper/MyStepper.cpp	/^void Stepper::setSpeed(unsigned int speed){$/;"	f	class:Stepper	typeref:typename:void
start	python_test_script/test_arduino_speed.py	/^start = time.perf_counter()$/;"	v
state	ReadAccelerometer/LSM9DS1.h	/^    int state;$/;"	m	class:LSM9DS1Class	typeref:typename:int
step	arduino_stepper/MyStepper.cpp	/^void Stepper::step(){$/;"	f	class:Stepper	typeref:typename:void
sweep	arduino_stepper/MyStepper.cpp	/^void Stepper::sweep(uint8_t pin1, uint8_t pin2){$/;"	f	class:Stepper	typeref:typename:void
sweepSin	python_test_script/sweep_sin_test.py	/^def sweepSin(time, freq):$/;"	f
t	python_test_script/test_stepper.py	/^t = np.linspace(0, period, num=fs*period+1)$/;"	v
temp	python_test_script/test_arduino_speed.py	/^    temp = 0$/;"	v
time_new	python_test_script/test_stepper.py	/^            time_new = time.perf_counter_ns()$/;"	v
time_not_passed	python_test_script/test_stepper.py	/^            time_not_passed = ((time_new - time_old) < dt)$/;"	v
time_not_passed	python_test_script/test_stepper.py	/^        time_not_passed = True$/;"	v
time_old	python_test_script/test_stepper.py	/^        time_old = time_new$/;"	v
time_old	python_test_script/test_stepper.py	/^    time_old = time.perf_counter_ns()$/;"	v
writeRegister	ReadAccelerometer/LSM9DS1.cpp	/^int LSM9DS1Class::writeRegister(uint8_t slaveAddress, uint8_t address, uint8_t value)$/;"	f	class:LSM9DS1Class	typeref:typename:int
~LSM9DS1Class	ReadAccelerometer/LSM9DS1.cpp	/^LSM9DS1Class::~LSM9DS1Class()$/;"	f	class:LSM9DS1Class
